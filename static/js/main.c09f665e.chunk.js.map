{"version":3,"sources":["firebase.ts","List.tsx","hooks/useShowtimeList.ts","hooks/useDvdList.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getAnalytics","getFirestore","List","React","useState","tab","setTab","showtimeList","undefined","list","setList","useEffect","getDocs","query","collection","orderBy","then","snapshot","docs","map","doc","id","dvd","get","datetime","toDate","useMemo","upcoming","past","now","Date","forEach","item","isBefore","push","useShowtimeList","dvdList","title","titleIMDb","director","directorIMDb","year","useDvdList","dvdMap","reduce","acc","cur","className","clsx","onClick","length","console","log","format","href","rel","target","App","data-shadow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAoBaA,EAAMC,YAXI,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAMJC,GADYC,YAAaV,GACbW,e,6BC2FVC,EA1GQ,WAAO,IAAD,EACLC,IAAMC,SAAsC,YADvC,mBACpBC,EADoB,KACfC,EADe,KAErBC,ECED,WAA4B,IAAD,EACRJ,IAAMC,cAAiCI,GAD/B,mBACzBC,EADyB,KACnBC,EADmB,KAmBhC,OAhBAP,IAAMQ,WAAU,WACdC,YACEC,YAAMC,YAAWf,EAAW,YAAagB,YAAQ,WAAY,UAC7DC,MAAK,SAACC,GACNP,EACEO,EAASC,KAAKC,KAAI,SAACC,GACjB,MAAO,CACLC,GAAID,EAAIC,GACRC,IAAKF,EAAIG,IAAI,OACbC,SAAWJ,EAAIG,IAAI,YAA0BE,mBAKpD,IAEItB,IAAMuB,SAAQ,WACnB,QAAalB,IAATC,EACF,MAAO,CAAEkB,cAAUnB,EAAWoB,UAAMpB,GAEtC,IAAMmB,EAAuB,GACvBC,EAAmB,GACnBC,EAAM,IAAIC,KAQhB,OAPArB,EAAKsB,SAAQ,SAACC,GACRC,YAASD,EAAKR,SAAUK,GAC1BD,EAAKM,KAAKF,GAEVL,EAASO,KAAKF,MAGX,CAAEL,WAAUC,UAClB,CAACnB,IDpCiB0B,GACfC,EEGD,WAAuB,IAAD,EACHjC,IAAMC,cAA4BI,GAD/B,mBACpBC,EADoB,KACdC,EADc,KAoB3B,OAjBAP,IAAMQ,WAAU,WACdC,YAAQE,YAAWf,EAAW,QAAQiB,MAAK,SAACC,GAC1CP,EACEO,EAASC,KAAKC,KAAI,SAACC,GACjB,MAAO,CACLC,GAAID,EAAIC,GACRgB,MAAOjB,EAAIG,IAAI,SACfe,UAAWlB,EAAIG,IAAI,aACnBgB,SAAUnB,EAAIG,IAAI,YAClBiB,aAAcpB,EAAIG,IAAI,gBACtBkB,KAAMrB,EAAIG,IAAI,kBAKrB,IAEId,EFvBSiC,GACVC,EAASxC,IAAMuB,SAAkC,WACrD,YAAgBlB,IAAZ4B,EAA8B,GAC3BA,EAAQQ,QAAO,SAACC,EAAKC,GAAN,mBAAC,eAAmBD,GAApB,kBAA0BC,EAAIzB,GAA9B,eAAwCyB,OAAU,MACvE,CAACV,IAEJ,OACE,sBAAKW,UAAU,OAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,oBACEA,UAAWC,YACT,YACQ,aAAR3C,GAAsB,qBAExB4C,QAAS,kBAAM3C,EAAO,aALxB,sBASA,oBACEyC,UAAWC,YAAK,YAAqB,SAAR3C,GAAkB,qBAC/C4C,QAAS,kBAAM3C,EAAO,SAFxB,kBAMA,oBACEyC,UAAWC,YAAK,YAAqB,QAAR3C,GAAiB,qBAC9C4C,QAAS,kBAAM3C,EAAO,QAFxB,oBAOF,sBAAKyC,UAAU,wBAAf,UACW,aAAR1C,SACmBG,IAAjBD,QAAwDC,IAA1BD,EAAaoB,SAC1C,qBAAKoB,UAAU,+BAAf,wBACmC,IAAjCxC,EAAaoB,SAASuB,OACxB,qBAAKH,UAAU,qCAAf,0BAIAxC,EAAaoB,SAASR,KAAI,SAACa,GACzB,IAAMV,EAAMqB,EAAOX,EAAKV,KAExB,OADA6B,QAAQC,IAAIpB,GACPV,EAKH,sBAAKyB,UAAU,uCAAf,UACE,8BAAMzB,EAAIe,QACV,8BAAMgB,YAAOrB,EAAKR,SAAU,oBAF6BQ,EAAKX,IAH9D,qBAAK0B,UAAU,qCAAf,cAAyDf,EAAKX,QAU/D,SAARhB,SACmBG,IAAjBD,QAAoDC,IAAtBD,EAAaqB,KAC1C,qBAAKmB,UAAU,qCAAf,wBAG+B,IAA7BxC,EAAaqB,KAAKsB,OACpB,qBAAKH,UAAU,qCAAf,0BAIAxC,EAAaqB,KAAKT,KAAI,SAACa,GACrB,IAAMV,EAAMqB,EAAOX,EAAKV,KACxB,OAAKA,EAKH,sBAAKyB,UAAU,uCAAf,UACE,8BAAMzB,EAAIe,QACV,8BAAMgB,YAAOrB,EAAKR,SAAU,oBAF6BQ,EAAKX,IAH9D,qBAAK0B,UAAU,qCAAf,cAAyDf,EAAKX,QAU/D,QAARhB,SACcG,IAAZ4B,EACC,qBAAKW,UAAU,qCAAf,wBACqB,IAAnBX,EAAQc,OACV,qBAAKH,UAAU,qCAAf,0BAIAX,EAAQjB,KAAI,SAACa,GAAD,OACV,sBAAKe,UAAU,8BAAf,UACE,oBAAGO,KAAMtB,EAAKM,UAAWiB,IAAI,aAAaC,OAAO,SAAjD,UACGxB,EAAKK,MADR,KACiBL,EAAKS,KADtB,OAGA,mBAAGa,KAAMtB,EAAKQ,aAAce,IAAI,aAAaC,OAAO,SAApD,SACGxB,EAAKO,aALwCP,EAAKX,eG9EtDoC,MAhBf,WACE,OACE,sBAAKV,UAAU,YAAf,UACE,oBAAIW,cAAY,oBAAhB,+BACA,uBACA,uBACA,wEACA,uBACA,uBACA,qBAAKX,UAAU,iBAAf,SACE,cAAC,EAAD,UCAOY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c09f665e.chunk.js","sourcesContent":["\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAS_QmWcTGcmAhlL5NPcGS-kRQ8GSlJBmM\",\n  authDomain: \"part-time-theater.firebaseapp.com\",\n  projectId: \"part-time-theater\",\n  storageBucket: \"part-time-theater.appspot.com\",\n  messagingSenderId: \"52098331465\",\n  appId: \"1:52098331465:web:4d63c3378b5f68203f2098\",\n  measurementId: \"G-XF42QC7WNH\"\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const analytics = getAnalytics(app);\nexport const firestore = getFirestore();","import clsx from \"clsx\";\nimport { format } from \"date-fns\";\nimport React from \"react\";\nimport { Dvd, useDvdList } from \"./hooks/useDvdList\";\nimport { useShowtimeList } from \"./hooks/useShowtimeList\";\nimport \"./List.css\";\n\nconst List: React.FC = () => {\n  const [tab, setTab] = React.useState<\"upcoming\" | \"past\" | \"lib\">(\"upcoming\");\n  const showtimeList = useShowtimeList();\n  const dvdList = useDvdList();\n  const dvdMap = React.useMemo<{ [key in string]: Dvd }>(() => {\n    if (dvdList === undefined) return {};\n    return dvdList.reduce((acc, cur) => ({ ...acc, [cur.id]: { ...cur } }), {});\n  }, [dvdList]);\n\n  return (\n    <div className=\"list\">\n      <div className=\"list__tab-container\">\n        <h2\n          className={clsx(\n            \"list__tab\",\n            tab === \"upcoming\" && \"list__tab--active\"\n          )}\n          onClick={() => setTab(\"upcoming\")}\n        >\n          Upcoming\n        </h2>\n        <h2\n          className={clsx(\"list__tab\", tab === \"past\" && \"list__tab--active\")}\n          onClick={() => setTab(\"past\")}\n        >\n          Past\n        </h2>\n        <h2\n          className={clsx(\"list__tab\", tab === \"lib\" && \"list__tab--active\")}\n          onClick={() => setTab(\"lib\")}\n        >\n          Lib\n        </h2>\n      </div>\n      <div className=\"list__items-container\">\n        {tab === \"upcoming\" &&\n          (showtimeList === undefined || showtimeList.upcoming === undefined ? (\n            <div className=\"items-container__item--empty\">Loading...</div>\n          ) : showtimeList.upcoming.length === 0 ? (\n            <div className=\"list__items-container__item--empty\">\n              Nothing yet.\n            </div>\n          ) : (\n            showtimeList.upcoming.map((item) => {\n              const dvd = dvdMap[item.dvd];\n              console.log(item)\n              if (!dvd)\n                return (\n                  <div className=\"list__items-container__item--empty\" key={item.id}>-</div>\n                );\n              return (\n                <div className=\"list__items-container__showtime-item\" key={item.id}>\n                  <div>{dvd.title}</div>\n                  <div>{format(item.datetime, \"HH:mm MMM do\")}</div>\n                </div>\n              );\n            })\n          ))}\n        {tab === \"past\" &&\n          (showtimeList === undefined || showtimeList.past === undefined ? (\n            <div className=\"list__items-container__item--empty\">\n              Loading...\n            </div>\n          ) : showtimeList.past.length === 0 ? (\n            <div className=\"list__items-container__item--empty\">\n              Nothing yet.\n            </div>\n          ) : (\n            showtimeList.past.map((item) => {\n              const dvd = dvdMap[item.dvd];\n              if (!dvd)\n                return (\n                  <div className=\"list__items-container__item--empty\" key={item.id}>-</div>\n                );\n              return (\n                <div className=\"list__items-container__showtime-item\" key={item.id}>\n                  <div>{dvd.title}</div>\n                  <div>{format(item.datetime, \"HH:mm MMM do\")}</div>\n                </div>\n              );\n            })\n          ))}\n        {tab === \"lib\" &&\n          (dvdList === undefined ? (\n            <div className=\"list__items-container__item--empty\">Loading...</div>\n          ) : dvdList.length === 0 ? (\n            <div className=\"list__items-container__item--empty\">\n              Nothing yet.\n            </div>\n          ) : (\n            dvdList.map((item) => (\n              <div className=\"list__items-container__item\" key={item.id}>\n                <a href={item.titleIMDb} rel=\"noreferrer\" target=\"_blank\">\n                  {item.title} ({item.year})\n                </a>\n                <a href={item.directorIMDb} rel=\"noreferrer\" target=\"_blank\">\n                  {item.director}\n                </a>\n              </div>\n            ))\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import { collection, getDocs, orderBy, query, Timestamp } from \"@firebase/firestore\";\nimport { isBefore } from \"date-fns\";\nimport React from \"react\";\nimport { firestore } from \"../firebase\";\n\nexport interface Showtime {\n  id: string;\n  dvd: string;\n  datetime: Date;\n}\n\nexport function useShowtimeList() {\n  const [list, setList] = React.useState<Showtime[] | undefined>(undefined);\n\n  React.useEffect(() => {\n    getDocs(\n      query(collection(firestore, \"showtime\"), orderBy(\"datetime\", \"desc\"))\n    ).then((snapshot) => {\n      setList(\n        snapshot.docs.map((doc) => {\n          return {\n            id: doc.id,\n            dvd: doc.get(\"dvd\"),\n            datetime: (doc.get(\"datetime\") as Timestamp).toDate(),\n          };\n        })\n      );\n    });\n  }, []);\n\n  return React.useMemo(() => {\n    if (list === undefined) {\n      return { upcoming: undefined, past: undefined };\n    }\n    const upcoming: Showtime[] = [];\n    const past: Showtime[] = [];\n    const now = new Date();\n    list.forEach((item) => {\n      if (isBefore(item.datetime, now)) {\n        past.push(item);\n      } else {\n        upcoming.push(item);\n      }\n    });\n    return { upcoming, past };\n  }, [list]);\n}\n","import { collection, getDocs } from \"@firebase/firestore\";\nimport React from \"react\";\nimport { firestore } from \"../firebase\";\n\nexport interface Dvd {\n  id: string;\n  title: string;\n  titleIMDb: string;\n  director: string;\n  directorIMDb: string;\n  year: number;\n}\n\nexport function useDvdList() {\n  const [list, setList] = React.useState<Dvd[] | undefined>(undefined);\n\n  React.useEffect(() => {\n    getDocs(collection(firestore, \"dvd\")).then((snapshot) => {\n      setList(\n        snapshot.docs.map((doc) => {\n          return {\n            id: doc.id,\n            title: doc.get(\"title\"),\n            titleIMDb: doc.get(\"titleIMDb\"),\n            director: doc.get(\"director\"),\n            directorIMDb: doc.get(\"directorIMDb\"),\n            year: doc.get(\"year\"),\n          };\n        })\n      );\n    });\n  }, []);\n\n  return list;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport List from \"./List\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1 data-shadow=\"Part-time Theater\">Part-time Theater</h1>\n      <br />\n      <br />\n      <h3>🍿️ Opens occasionally.</h3>\n      <br />\n      <br />\n      <div className=\"list-container\">\n        <List />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}